breakpoint;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9] = -1;

[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13] = SP;
SP = [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512-1;
backup;

multipush(EIP);

if(EC == 1) then
	backup;
	print("WrgIns");
	R1 = EXIT_PROCESS;
	call MOD_1;
	restore;
	call MOD_5;
endif;


if(EC == 2) then
	backup;
	print("WrgAcs");
        R1 = EXIT_PROCESS;
        call MOD_1;
        restore;
        call MOD_5;
endif;


if(EC == 3) then
	print("Arithmet");
        R1 = EXIT_PROCESS;
        call MOD_1;
        restore;
        call MOD_5;
endif;

if(EC == 0) then
	if(EPN == 2 || EPN == 3) then
		R1 = GET_FREE_PAGE;
		call MOD_2;
		[PTBR+4] = R0;
		[PTBR+5] = "1110";

		R1 = GET_FREE_PAGE;
		call MOD_2;
		[PTBR+6] = R0;
		[PTBR+7] = "1110";
	endif;

	if(EPN == 4 || EPN == 5 || EPN == 6 || EPN == 7) then
		R1 = GET_CODE_PAGE;
		R2 = [DISK_MAP_TABLE+[SYSTEM_STATUS_TABLE+1]*10+EPN];
		call MOD_2;
	
		[PTBR+EPN*2] = R0;
		[PTBR+EPN*2+1] = "1100";
	endif;
endif;

//[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9] = 0;


multipop(EIP);
restore;

[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9] = 0;

// IN KERNEL MODE, PAGING IS DISABLED SO WE CANNOT DIRECTLY PUSH IN THE USER STACK FROM KERNEL MODE
// TO DO THIS WE HAVE TO MANUALLY INCREMENT THE STACK POINTER AND THEN CALCULATE THE PHYSICAL ADDRESS AND
//PUSH TO THAT ADDRESS

SP = [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
SP= SP+1;

[[PTBR+((SP*2)/512)]*512+(SP%512)] = EIP;
ireturn;
