//breakpoint;

loadi(54, 67);	//LOAD MODULE 7(BOOT MODULE)
loadi(55,68);

loadi(50,63);	//LOAD MODULE 5(SCHEDULER)
loadi(51,64);

loadi(69,11);	//LOAD IDLE CODE
loadi(70,12);

SP = 82*512 - 1;	//SP WILL POINT TO TOP OF TOP OF KERNEL STACK

call MOD_7;		// CALL BOOT MODULE

PTBR = PAGE_TABLE_BASE;
PTLR = 10;

//----------------------------------------------SETTING PAGE TABLE FOR IDLE------------------------------------

//LIBRARY
[PTBR + 0] = 63;
[PTBR + 1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";


// HEAP
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";


// CODE
[PTBR+8] = 69;
[PTBR+9] = "0100";
[PTBR+10] = 70;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";


//STACK
[PTBR+16] = 81;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";

//----------------------------------------------SETTING PROCESS TABLE FOR IDLE---------------------------------

[PROCESS_TABLE+1] = 0;		//PID
[PROCESS_TABLE+4] = RUNNING;	//STATE
[PROCESS_TABLE+11] = 82;	//USER AREA PAGE NUMBER
[PROCESS_TABLE+12] = 0;		//KPTR
[PROCESS_TABLE+13] = 8*512 ;	//UPTR
[PROCESS_TABLE+14] = PTBR;      //PTBR
[PROCESS_TABLE+15] = 10;	//PTLR

//-------------------------------------------------------------------------------------------------------------

[81*512] = [69*512 + 1];	//ADDRESS 69*512 + 1 CONTAINS ENTRY POINT FOR IDLE

SP = 8*512;
[SYSTEM_STATUS_TABLE + 1] = 0;

ireturn ;
